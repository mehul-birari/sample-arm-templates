{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "myLAW",
      "metadata": {
        "description": "Name of the Log Analytics WorkSpace"
      }
    },
    "actionGroupName": {
      "type": "string",
      "defaultValue": "my-AG",
      "metadata": {
        "description": "Name of the Action Group"
      }
    },
    "emailReceivers": {
      "type": "array",
      "metadata": {
        "description": "The list of email receivers that are part of this action group."
      },
      "defaultValue": []
    },
    "alertName": {
      "type": "string",
      "defaultValue": "samplelogalert",
      "metadata": {
        "description": "Name of the Alert"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location of the Action Group"
      }
    }
  },
  "variables": {
    "alertDescription": "Sample log search alert",
    "alertStatus": "true",
    "alertSource": {
      "Query": "requests | where resultCode == \"500\"",
      "SourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
      "Type": "ResultCount"
    },
    "alertSchedule": {
      "Frequency": 15,
      "Time": 60
    },
    "alertActions": {
      "SeverityLevel": "4"
    },
    "alertTrigger": {
      "Operator": "GreaterThan",
      "Threshold": "1"
    },
    "actionGrp": {
      "ActionGroup": "[resourceId('Microsoft.Insights/actiongroups', parameters('actionGroupName'))]",
      "Subject": "Customized Email Header",
      "Webhook": "{ \"alertname\":\"#alertrulename\", \"IncludeSearchResults\":true }"
    }
  },
  "resources": [
    {
      "name": "[parameters('logAnalyticsWorkspaceName')]",
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2015-11-01-preview",
      "location": "[parameters('location')]",
      "tags": {},
      "properties": {
        "sku": {
          "name": "Free"
        }
      },
      "resources": []
    },
    {
      "type": "Microsoft.Insights/actionGroups",
      "apiVersion": "2018-03-01",
      "name": "[parameters('actionGroupName')]",
      "location": "Global",
      "properties": {
        "groupShortName": "[parameters('actionGroupName')]",
        "enabled": true,
        "emailReceivers": "[parameters('emailReceivers')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "name": "[parameters('alertName')]",
      "type": "Microsoft.Insights/scheduledQueryRules",
      "apiVersion": "2018-04-16",
      "location": "[parameters('Location')]",
      "properties": {
        "description": "[variables('alertDescription')]",
        "enabled": "[variables('alertStatus')]",
        "source": {
          "query": "[variables('alertSource').Query]",
          "dataSourceId": "[variables('alertSource').SourceId]",
          "queryType": "[variables('alertSource').Type]"
        },
        "schedule": {
          "frequencyInMinutes": "[variables('alertSchedule').Frequency]",
          "timeWindowInMinutes": "[variables('alertSchedule').Time]"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "[variables('alertActions').SeverityLevel]",
          "aznsAction": {
            "actionGroup": "[array(variables('actionGrp').ActionGroup)]",
            "emailSubject": "[variables('actionGrp').Subject]",
            "customWebhookPayload": "[variables('actionGrp').Webhook]"
          },
          "trigger": {
            "thresholdOperator": "[variables('alertTrigger').Operator]",
            "threshold": "[variables('alertTrigger').Threshold]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/actiongroups', parameters('actionGroupName'))]"
      ]
    }
  ]
}